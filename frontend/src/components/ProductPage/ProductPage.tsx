import { useParams } from "react-router-dom";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import "./ProductPage.scss";
import { Product } from "../../types/Product";
import { useNavigate } from "react-router-dom";

interface ProductPageProps {
  products: Product[];
}

export const ProductPage: React.FC<ProductPageProps> = ({ products }) => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();

  // üïê –û—á—ñ–∫—É—î–º–æ, –ø–æ–∫–∏ —Ç–æ–≤–∞—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∞—Ç—å—Å—è
  if (products.length === 0) {
    return <h2 className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É...</h2>;
  }

  const product = products.find((p) => p._id === id);

  if (!product) {
    return <h2 className="not_found">–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h2>;
  }

  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: false,
  };

  const relatedSettings = {
    dots: false,
    infinite: true,
    speed: 500,
    slidesToShow: 4,
    slidesToScroll: 1,
    arrows: false,
    responsive: [
      {
        breakpoint: 1024,
        settings: { slidesToShow: 3 },
      },
      {
        breakpoint: 768,
        settings: { slidesToShow: 2 },
      },
      {
        breakpoint: 480,
        settings: { slidesToShow: 1 },
      },
    ],
  };

  return (
    <div className="product_page">
      {/* üé• –ì–∞–ª–µ—Ä–µ—è —Ç–æ–≤–∞—Ä—É */}
      <div className="product_gallery">
        <Slider {...settings}>
          {product.images.map((image, index) => (
            <div key={index} className="product_image">
              <img src={image} alt={`Product ${index + 1}`} />
            </div>
          ))}
        </Slider>
      </div>

      {/* ‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–æ–≤–∞—Ä */}
      <div className="product_details">
        <h1 className="product_title">{product.name}</h1>
        <p className="product_description">{product.description || "–ù–µ–º–∞—î –æ–ø–∏—Å—É"}</p>

        {/* üìå –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
        <div className="product_specs">
          <h3>–û—Å–Ω–æ–≤–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
          <ul>
            <li><strong>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</strong> {product.category}</li>
            <li><strong>–¶—ñ–Ω–∞:</strong> {product.price} –≥—Ä–Ω</li>
            <li><strong>–ù–∞—è–≤–Ω—ñ—Å—Ç—å:</strong> "–Ñ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ"</li>
          </ul>
        </div>

        <button
          className="buy_button"
          onClick={() => navigate("/cart", { state: { product } })}
        >
          –ö—É–ø–∏—Ç–∏
        </button>
      </div>

      {/* üîÑ –°—Ö–æ–∂—ñ —Ç–æ–≤–∞—Ä–∏ */}
      <section className="related_products">
        <h2>–°—Ö–æ–∂—ñ —Ç–æ–≤–∞—Ä–∏</h2>
        <Slider {...relatedSettings}>
          {products
            .filter((p) => p.category === product.category && p._id !== product._id)
            .slice(0, 6)
            .map((relatedProduct) => (
              <div key={relatedProduct._id} className="related_item">
                <img src={relatedProduct.images[0]} alt={relatedProduct.name} />
                <h3>{relatedProduct.name}</h3>
                <p>{relatedProduct.price} –≥—Ä–Ω</p>
                <a href={`/product/${relatedProduct._id}`} className="buy_button">
                  –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                </a>
              </div>
            ))}
        </Slider>
      </section>
    </div>
  );
};
